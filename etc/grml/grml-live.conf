# Filename:      /etc/grml/grml-live.conf
# Purpose:       main configuration file for grml-live
# Authors:       grml-team (grml.org), (c) Michael Prokop <mika@grml.org>
# Bug-Reports:   see http://grml.org/bugs/
# License:       This file is licensed under the GPL v2 or any later version.
################################################################################
# !!!!!! IMPORTANT NOTE !!!!!
# This file is meant as a reference. Please adjust your local configuration
# via /etc/grml/grml-live.local instead as this file is marked as configuration
# file in your package management.
# !!!!!! IMPORTANT NOTE !!!!!
################################################################################

# Main output directory
# Please notice that you need suid,dev,rw permissions there
# OUTPUT="./grml/"
# You have enough RAM? Use shared memory for fast testing-purposes:
# OUTPUT="/dev/shm" # mount -o remount,suid,dev,rw /dev/shm

# Where do want to find the chroot of the buildprocess files?
# CHROOT_OUTPUT="$OUTPUT/grml_chroot"
# Where do you want to find the compressed chroot, bootstuff,...?
# BUILD_OUTPUT="$OUTPUT/grml_cd"
# Where do you want to find the final ISO?
# ISO_OUTPUT="$OUTPUT/grml_isos"
# Where do you want to find the netboot package?
# NETBOOT="${OUTPUT}/netboot/"

# Do you want to preserve the logfile from being cleaned after each execution
# of grml-live? By default the logfile is cleaned so the log doesn't fill up.
# If you want to store your logs permanently it's recommended to use grml-live-db.
# PRESERVE_LOGFILE='1'

# If package grml-live-db is installed the package selection and grml-live.log
# are being logged to to a sqlite database.Defaults to /var/log/grml-live.db
# DPKG_DATABASE=/var/log/grml-live.db

# Use your own database wrapper script for grml-live-db:
# DPKG_DBSCRIPT=/usr/share/grml-live-db/scripts/dpkg-to-db

# Use your own database script cmdline options for grml-live-db:
# DPKG_DBOPTIONS="-d $DPKG_DATABASE --logfile $LOGFILE --flavour $GRML_NAME < $DPKG_LIST"

# Do you want to zero / clean up / remove the previous logfiles of FAI
# before executing grml-live? Otherwise keep all the logfiles inside
# /var/log/fai/$HOSTNAME/...
# Default: unset (so do not remove the logfile(s))
# ZERO_FAI_LOGFILE='1'

# Which Debian suite/release do you want to use?
# Supported values are: stable, testing, unstable (or their corresponding release
# names like "jessie").
# Unless it is set it defaults to "testing".
# SUITE="unstable"

# Which FAI classes do you want to use by default?#

# Notice: GRMLBASE is recommended in any case unless you *really* know what you
# are doing; make sure to also use a GRML_* class (for example GRML_SMALL
# or GRML_FULL) to get an according kernel and also select the
# architecture (I386 for x86; AMD64 for x86_64)
# CLASSES="GRMLBASE,GRML_FULL,I386"

# HTTP Proxy to use for APT
# APT_PROXY="http://localhost:3142/"

# Which Debian suite and which mirror do you want to use for debootstrapping?
# Usage: "<suite> <mirror>"
# FAI_DEBOOTSTRAP="jessie http://ftp.debian.org/debian"

# Do you want to use a local mirror (like NFS)?
# If so specify the directory where debian/ is available:
# MIRROR_DIRECTORY="/media/mirror"
# ... and then set up an according class file in
# ${GRML_FAI_CONFIG}/config/files/etc/apt/sources.list.d/
# containing something like:
# deb file:///media/mirror/debian sid main contrib non-free

# Version number of ISO:
# VERSION="0.0-1"

# Name of the release:
# RELEASENAME="grml-live rocks"

# Which "grml flavour name" do you want to use?
# Common usage examples: grml, grml-small, grml64,...
# GRML_NAME="grml"

# Specify hostname of the live-system:
# HOSTNAME=grml

# Specify user with UID 1000 on live-system:
# USERNAME=grml

# Which bootloader do you want to use? Default: isolinux
# Supported values: isolinux, grub, grub2
# BOOT_METHOD='isolinux'

# Directory of configuration files for grml-live's FAI:
# GRML_FAI_CONFIG=/etc/grml/fai

# Do you want to put any local files into the chroot?
# If so then point CHROOT_INSTALL to a directory providing the files.
# Note: the files are installed under '/' in the chroot -
# so you have to create the rootfs structure on your own.
# CHROOT_INSTALL="$GRML_FAI_CONFIG/chroot_install"

# Do you want to pass any additional arguments to FAI?
# FAI_ARGS=""

# Where do you want to store grml-live.log?
# LOGDIR="/var/log/fai/$HOSTNAME/last"

# Which architecture do you want to build?
# It defaults to output of 'dpkg --print-architecture'
# ARCH="i386"

# Name of distribution that should be build. By default
# it's "grml", if you want to adjust please make sure
# your distri name is just one single word so it
# works on the boot prompt.
# DISTRI_NAME="grml"

# Short information about the distribution. Default:
# DISTRI_INFO="Grml - Live Linux for system administrators   "

# Bootsplash background image use in isolinux configuration
# Note: not relevant if using non-default ISOLINUX_METHOD="console".
# DISTRI_SPLASH='grml.png'

# Do you want to use your own templates? If so set the
# template directory but please make sure it looks
# likes the default directory [/usr/share/grml-live/templates]
# TEMPLATE_DIRECTORY='/usr/share/grml-live/templates'

# Use custom scripts, for example for bootgrub.mksh?
# Useful when running grml-live from git checkout.
# If unset defaults to /usr/share/grml-live/scripts
# SCRIPTS_DIRECTORY='/usr/share/grml-live/scripts'

# Do you want to use console based isolinux boot splash
# instead of the default graphical menu?
# ISOLINUX_METHOD="console"

# Do you want to skip adding /boot/addons/ (from the template directory)?
# NO_ADDONS='1'

# Do you want to skip adding /boot/addons/bsd4grml/ (from the template directory)?
# NO_ADDONS_BSD4GRML='1'

# By default the ISO is created for hybrid boot, so you can either
# boot the CD using normal el torito mode or copy it to USB device
# *without* having to run grml2usb (like: 'dd if=grml.iso of=/dev/sdX')
# - working both with the same ISO
# HYBRID_METHOD='disable'   # do not create a hybrid ISO
# HYBRID_METHOD='isohybrid' # use isohybrid from SYSLINUX
# HYBRID_METHOD='grub2'     # use manifold with GRUB 2
# HYBRID_METHOD='manifold'  # use manifold with ISOLINUX (default)

# Binary that should be used for creating the squashfs file.
# Defaults to the executable matching the kernel version, falls back to mksquashfs.
# SQUASHFS_BINARY='mksquashfs'

# Options that should be used by mksquashfs during build process.
# Defaults to '-b 256k' and the according LZMA/XZ option.
# SQUASHFS_OPTIONS='-b 256k'

# exclude files from compressed squashfs file using the
# the mksquashfs option -ef:
# SQUASHFS_EXCLUDES_FILE="${GRML_FAI_CONFIG}/config/grml/squashfs-excludes"

# Do you want to exit grml-live if some packages were requested for installation
# on fresh installs but are missing on the generated ISO finally?
# By default the package list is sent to stdout but grml-live doesn't interrupt.
# EXIT_ON_MISSING_PACKAGES=1

# Do you want to use a special string for identifying the ISO?
# By default the grml-name and version string are used as a base for generating
# /conf/bootid.txt on the ISO. If you want to use a different value feel free to
# adjust it accordingly.
# Please notice that space characters inside this variable are not supported.
# BOOTID="mybootid"

# Do you want to skip the /conf/bootid.txt feature?
# NO_BOOTID='1'

# Do you want to add any additional bootoptions that should be used by default?
# DEFAULT_BOOTOPTIONS="ssh=secret"

## END OF FILE #################################################################

# Filename:      /etc/grml/grml-live.conf
# Purpose:       main configuration file for grml-live
# Authors:       grml-team (grml.org), (c) Michael Prokop <mika@grml.org>
# Bug-Reports:   see http://grml.org/bugs/
# License:       This file is licensed under the GPL v2 or any later version.
################################################################################
# !!!!!! IMPORTANT NOTE !!!!!
# This file is meant as a reference. Please adjust your local configuration
# via /etc/grml/grml-live.local instead as this file is marked as configuration
# file in your package management.
# !!!!!! IMPORTANT NOTE !!!!!
################################################################################

# Main output directory
# Please notice that you need suid,dev,rw permissions there
# OUTPUT="./grml/"
# You have enough RAM? Use shared memory for fast testing-purposes:
# OUTPUT="/dev/shm" # mount -o remount,suid,dev,rw /dev/shm

# Do you want to preserve the logfile from being cleaned after each execution
# of grml-live? By default the logfile is cleaned so the log doesn't fill up.
# PRESERVE_LOGFILE='1'

# Which Debian suite/release do you want to use?
# Supported values are: stable, testing, unstable (or their corresponding release
# names like "bookworm").
# Unless it is set it defaults to "testing".
# SUITE="unstable"

# Which classes do you want to use?
# You probably want to pick GRML_SMALL or GRML_FULL, and your custom
# classes. GRMLBASE and the architecture-specific class are automatically
# added.
# CLASSES="GRML_FULL"

# HTTP Proxy to use for APT
# APT_PROXY="http://localhost:3142/"

# Which Debian mirror do you want to use for bootstrapping?
# BOOTSTRAP_MIRROR="http://deb.debian.org/debian"

# Do you want to use a local mirror (like NFS)?
# If so specify the directory where debian/ is available:
# MIRROR_DIRECTORY="/media/mirror"
# ... and then set up an according file in
# ${GRML_FAI_CONFIG}/files/${CLASS}/etc/apt/sources.list.d/custom.list
# containing something like:
# deb file:///media/mirror/debian sid main contrib non-free-firmware non-free

# Version number of ISO:
# VERSION="0.0-1"

# Name of the release:
# RELEASENAME="grml-live rocks"

# Which "grml flavour name" do you want to use?
# Common usage examples: grml, grml-small, grml64,...
# GRML_NAME="grml"

# Specify hostname of the live-system:
# HOSTNAME=grml

# Specify user with UID 1000 on live-system:
# USERNAME=grml

# Directory of configuration files for grml-live's FAI:
# GRML_FAI_CONFIG=/usr/share/grml-live/config

# Do you want to put any local files into the chroot?
# If so then point CHROOT_INSTALL to a directory providing the files.
# Note: the files are installed under '/' in the chroot -
# so you have to create the rootfs structure on your own.
# CHROOT_INSTALL="$GRML_FAI_CONFIG/chroot_install"

# Which architecture do you want to build?
# It defaults to output of 'dpkg --print-architecture'
# ARCH="i386"

# Name of distribution that should be build. By default
# it's "grml", if you want to adjust please make sure
# your distri name is just one single word so it
# works on the boot prompt.
# DISTRI_NAME="grml"

# Short information about the distribution. Default:
# DISTRI_INFO="Grml - Live Linux for system administrators   "

# Bootsplash background image use in isolinux configuration
# Note: not relevant if using non-default ISOLINUX_METHOD="console".
# DISTRI_SPLASH='grml.png'

# Do you want to use console based isolinux boot splash
# instead of the default graphical menu?
# ISOLINUX_METHOD="console"

# Do you want to skip adding /boot/addons/ (from the template directory)?
# NO_ADDONS='1'

# Secure Boot method that should be used (amd64 only).
# If unset defaults to "disabled" (which means no Secure Boot will be present)
# The following approaches are supported:
# debian: use the Debian GRUB version which requires a signed kernel,
#         this is the recommended way to use Secure Boot with Grml
# ubuntu: use an older Ubuntu GRUB version which doesn't require a signed kernel,
#         though has a limited feature set only and requires customized GRUB
#         templates (the files in media-files/GRMLBASE/boot/grub/ don't work as such)
# SECURE_BOOT='disable'         # do not enable Secure Boot (default)
# SECURE_BOOT='debian'          # use approach from Debian
# SECURE_BOOT='ubuntu'          # use approach from Ubuntu

# Options that should be used by mksquashfs during build process.
# Defaults to '-b 1m' and the according LZMA/XZ option.
# SQUASHFS_OPTIONS='-b 1m'

# exclude files from compressed squashfs file using the
# the mksquashfs option -ef:
# SQUASHFS_EXCLUDES_FILE="${GRML_FAI_CONFIG}/grml/squashfs-excludes"

# Do you want to use a special string for identifying the ISO?
# By default the grml-name and version string are used as a base for generating
# /conf/bootid.txt on the ISO. If you want to use a different value feel free to
# adjust it accordingly.
# Please notice that space characters inside this variable are not supported.
# BOOTID="mybootid"

# Do you want to skip the /conf/bootid.txt feature?
# NO_BOOTID='1'

# Do you want to add any additional bootoptions that should be used by default?
# DEFAULT_BOOTOPTIONS="ssh=secret"
DEFAULT_BOOTOPTIONS="cryptomgr.notests fbcon=font:TER16x32 console=tty1 no_console_suspend"

## END OF FILE #################################################################
